{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nexport default {\n  name: \"Main\",\n  props: {\n    typeList: null\n  },\n  data() {\n    return {\n      category: this.$route.query.category,\n      //分类\n      folderId: this.$route.query.folderId,\n      //文件夹id\n      folders: [],\n      tableData: [],\n      ids: [],\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      uploadUrl: '',\n      shareVisible: false,\n      form: {}\n    };\n  },\n  mounted() {\n    this.load();\n    this.uploadUrl = this.$baseUrl + '/diskFiles/add?folder=No';\n    if (this.folderId) {\n      // 如果不这么判断  就会传 undefined到后台 就会报错\n      this.uploadUrl += '&folderId=' + this.folderId;\n    }\n  },\n  methods: {\n    //文件分享\n    share(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.shareVisible = true;\n    },\n    //复制文件\n    copy(row) {\n      this.$request.post('/diskFiles/copy/' + row.id).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"Copy Successfully\");\n          this.load();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    //打开文件\n    openFile(row) {\n      if (row.folder === 'Yes') {\n        //文件夹\n        location.href = '/front/home?category=' + this.category + '&folderId=' + row.id;\n        this.load();\n      } else {\n        window.open(this.$baseUrl + '/diskFiles/preview/' + row.id);\n      }\n    },\n    mouseEnter(row) {\n      if (!row.unSave) {\n        this.$set(row, 'optShow', true);\n      }\n    },\n    mouseLeave(row) {\n      if (!row.unSave) {\n        this.$set(row, 'optShow', false);\n      }\n    },\n    //批量删除\n    delBatch() {\n      if (!this.ids.length) {\n        this.$message.warning('Have no items to delete');\n        return;\n      }\n      this.$confirm('Are you sure you want to delete?', 'Delete Confirm', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/diskFiles/trash/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('Delete Successfully');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    //下载文件\n    download(url) {\n      window.open(url); // 文件下载\n    },\n\n    //重新命名\n    rename(row) {\n      this.$set(row, 'unSave', true);\n    },\n    //确认创建文件夹\n    saveFolder(row) {\n      if (row.id) {\n        //重命名后确认\n        this.$request.put('/diskFiles//update', row).then(res => {\n          if (res.code === '200') {\n            this.$message.success(\"Create Successfully\");\n            this.load();\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      } else {\n        let url = '/diskFiles/add?folder=Yes&name=' + row.name;\n        if (this.folderId) {\n          // 外层的folderId\n          url += '&folderId=' + this.folderId;\n        }\n        this.$request.post(url).then(res => {\n          if (res.code === '200') {\n            this.$message.success(\"Create Successfully\");\n            this.load();\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      }\n    },\n    //取消创建文件夹\n    cancel(index) {\n      this.tableData.splice(index, 1);\n      this.load();\n    },\n    //创建文件夹\n    addFolder() {\n      this.tableData.unshift({\n        name: 'New Folder',\n        type: 'folder',\n        unSave: true,\n        folderId: this.folderId || null\n      });\n    },\n    //加载数据\n    load() {\n      this.$request.get('/diskFiles/selectAll', {\n        params: {\n          category: this.category || null,\n          folderId: this.folderId || null\n        }\n      }).then(res => {\n        this.tableData = res.data || [];\n        this.tableData.forEach(item => {\n          this.$set(item, 'optShow', false); // 强制设置每行  加一个 optShow属性\n        });\n      });\n\n      this.$request.get('/diskFiles/selectFolders', {\n        params: {\n          folderId: this.folderId || null\n        }\n      }).then(res => {\n        this.folders = res.data || [];\n        console.log(this.folders);\n      });\n    },\n    //处理上传成功\n    handleFileSuccess(res) {\n      if (res.code === '200') {\n        this.$message.success(\"Upload Successfully\");\n        this.load();\n      } else {\n        this.$message.error('Upload Failed');\n      }\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    }\n  }\n};","map":{"version":3,"names":["name","props","typeList","data","category","$route","query","folderId","folders","tableData","ids","user","JSON","parse","localStorage","getItem","uploadUrl","shareVisible","form","mounted","load","$baseUrl","methods","share","row","stringify","copy","$request","post","id","then","res","code","$message","success","error","msg","openFile","folder","location","href","window","open","mouseEnter","unSave","$set","mouseLeave","delBatch","length","warning","$confirm","type","response","delete","catch","download","url","rename","saveFolder","put","cancel","index","splice","addFolder","unshift","get","params","forEach","item","console","log","handleFileSuccess","handleSelectionChange","rows","map","v"],"sources":["src/components/Main.vue"],"sourcesContent":["<template>\r\n  <div>\r\n  <!--增删-->\r\n  <div>\r\n    <div style=\"padding: 15px; border-bottom: 1px solid #ddd\">\r\n      <!--上传文件-->\r\n      <el-upload\r\n          style=\"display: inline-block; margin-right: 10px\"\r\n          :action=\"uploadUrl\"\r\n          :headers=\"{ token: user.token }\"\r\n          :show-file-list=\"false\"\r\n          :on-success=\"handleFileSuccess\"\r\n      >\r\n        <el-button type=\"primary\">Upload</el-button>\r\n      </el-upload>\r\n      <el-button type=\"primary\" plain @click=\"addFolder\">Create New</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">Delete</el-button>\r\n    </div>\r\n  </div>\r\n\r\n  <!--箭头导航栏-->\r\n  <div style=\"padding: 15px\">\r\n    <a :href=\"'/front/home?category=' + category\" style=\"font-weight: bold; color: #606266\">\r\n      All Files <i class=\"el-icon-arrow-right\" v-if=\"folders.length\"></i>\r\n    </a>\r\n    <a :href=\"'/front/home?category=' + category + '&folderId=' + item.id\" v-for=\"(item, index) in folders\" :key=\"item.id\"\r\n       :style=\"{ color: '#606266', fontWeight: index === folders.length - 1 ? 'normal' : 'bold' }\">\r\n      {{item.name}} <i class=\"el-icon-arrow-right\" v-if=\"index !== folders.length-1\"/>\r\n    </a>\r\n  </div>\r\n\r\n  <!--文件列表-->\r\n  <div>\r\n    <el-table stripe :data=\"tableData\" @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n      <el-table-column label=\"Name\">\r\n        <template v-slot=\"scope\">\r\n          <!--创建文件夹按钮-->\r\n          <div v-if=\"scope.row.unSave\">\r\n            <i style=\"font-size:25px; color: #409EFF\" :class=\"typeList.find(v => v.text === scope.row.type)?.icon || 'el-icon-file'\"></i>\r\n            <el-input size=\"mini\" style=\"width: 120px; margin:0px 5px;\" v-model=\"scope.row.name\"></el-input>\r\n            <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-check\" @click=\"saveFolder(scope.row)\"></el-button>\r\n            <el-button type=\"danger\" size=\"mini\" icon=\"el-icon-close\" @click=\"cancel(scope.row.$index)\"></el-button>\r\n          </div>\r\n          <!--功能按钮-->\r\n          <div style=\"display: flex; cursor: pointer\"  v-else @mouseenter=\"mouseEnter(scope.row)\"  @mouseleave=\"mouseLeave(scope.row)\">\r\n            <div style=\" flex: 1\">\r\n              <i @click=\"openFile(scope.row)\" style=\"font-size:25px; color: #409EFF\" :class=\"typeList.find(v => v.text === scope.row.type)?.icon || 'el-icon-file'\"></i>\r\n              <span v-if=\"!scope.row.unSave\" style=\"margin-left: 5px\">{{ scope.row.name }}</span>\r\n            </div>\r\n            <div style=\"color: #409EFF; font-size: 13px\" v-if=\"scope.row.optShow && scope.row.id\">\r\n              <el-tooltip content=\"Share\" effect=\"light\" :open-delay=\"1000\">\r\n                <i class=\"el-icon-share\" style=\"margin-right: 10px; cursor: pointer\"></i>\r\n              </el-tooltip>\r\n              <el-tooltip content=\"Upload\" effect=\"light\" :open-delay=\"1000\" v-if=\"scope.row.folder === 'No'\">\r\n                <i class=\"el-icon-download\" style=\"margin-right: 10px; cursor: pointer\" @click=\"download(scope.row.file)\"></i>\r\n              </el-tooltip>\r\n              <!--                    <el-tooltip content=\"Delete\" effect=\"light\" :open-delay=\"1000\">-->\r\n              <!--                      <i class=\"el-icon-delete\" style=\"margin-right: 10px; cursor: pointer\"></i>-->\r\n              <!--                    </el-tooltip>-->\r\n              <el-tooltip content=\"Rename\" effect=\"light\" :open-delay=\"1000\">\r\n                <i class=\"el-icon-rename\" style=\"margin-right: 10px; cursor: pointer\" @click=\"rename(scope.row)\"></i>\r\n              </el-tooltip>\r\n              <el-tooltip content=\"Copy\" effect=\"light\" :open-delay=\"1000\">\r\n                <i class=\"el-icon-document-copy\" style=\"cursor: pointer\" @click=\"copy(scope.row)\"></i>\r\n              </el-tooltip>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"updateTime\" label=\"Time\"></el-table-column>\r\n      <el-table-column prop=\"size\" label=\"Size(KB)\"></el-table-column>\r\n    </el-table>\r\n  </div>\r\n\r\n    <!--分享弹窗-->\r\n    <el-dialog title=\"Share\" :visible.sync=\"shareVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\">\r\n        <el-form-item label=\"Share Days\">\r\n          <el-radio-group v-model=\"form.days\">\r\n            <el-radio label=\"3\">3 days</el-radio>\r\n            <el-radio label=\"7\">7 days</el-radio>\r\n            <el-radio label=\"30\">30 days</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"Main\",\r\n  props:{\r\n    typeList: null\r\n  },\r\n  data(){\r\n    return {\r\n      category: this.$route.query.category, //分类\r\n      folderId: this.$route.query.folderId, //文件夹id\r\n      folders: [],\r\n      tableData: [],\r\n      ids: [],\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      uploadUrl: '',\r\n      shareVisible: false,\r\n      form:{},\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.load()\r\n\r\n    this.uploadUrl = this.$baseUrl + '/diskFiles/add?folder=No'\r\n    if (this.folderId) {  // 如果不这么判断  就会传 undefined到后台 就会报错\r\n      this.uploadUrl += '&folderId=' + this.folderId\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    //文件分享\r\n    share(row){\r\n      this.form = JSON.parse(JSON.stringify(row))\r\n      this.shareVisible = true\r\n    },\r\n\r\n    //复制文件\r\n    copy(row) {\r\n      this.$request.post('/diskFiles/copy/' + row.id).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success(\"Copy Successfully\")\r\n          this.load()\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n\r\n    //打开文件\r\n    openFile(row){\r\n      if(row.folder === 'Yes'){//文件夹\r\n        location.href='/front/home?category=' + this.category + '&folderId=' + row.id\r\n        this.load()\r\n      }else{\r\n        window.open(this.$baseUrl + '/diskFiles/preview/' + row.id)\r\n      }\r\n    },\r\n    mouseEnter(row) {\r\n      if (!row.unSave) {\r\n        this.$set(row, 'optShow', true)\r\n      }\r\n    },\r\n    mouseLeave(row) {\r\n      if (!row.unSave) {\r\n        this.$set(row, 'optShow', false)\r\n      }\r\n    },\r\n\r\n    //批量删除\r\n    delBatch() {\r\n      if (!this.ids.length) {\r\n        this.$message.warning('Have no items to delete')\r\n        return\r\n      }\r\n      this.$confirm('Are you sure you want to delete?', 'Delete Confirm', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/diskFiles/trash/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('Delete Successfully')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n\r\n    //下载文件\r\n    download(url){\r\n      window.open(url)  // 文件下载\r\n    },\r\n\r\n    //重新命名\r\n    rename(row){\r\n      this.$set(row, 'unSave', true)\r\n    },\r\n\r\n    //确认创建文件夹\r\n    saveFolder(row){\r\n      if(row.id){//重命名后确认\r\n        this.$request.put('/diskFiles//update', row).then(res=>{\r\n          if (res.code === '200') {\r\n            this.$message.success(\"Create Successfully\")\r\n            this.load()\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      }else {\r\n        let url = '/diskFiles/add?folder=Yes&name=' + row.name\r\n        if (this.folderId) {  // 外层的folderId\r\n          url += '&folderId=' + this.folderId\r\n        }\r\n        this.$request.post(url).then(res => {\r\n          if (res.code === '200') {\r\n            this.$message.success(\"Create Successfully\")\r\n            this.load()\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      }\r\n    },\r\n\r\n    //取消创建文件夹\r\n    cancel(index){\r\n      this.tableData.splice(index,1)\r\n      this.load()\r\n    },\r\n\r\n    //创建文件夹\r\n    addFolder(){\r\n      this.tableData.unshift({name:'New Folder', type:'folder',unSave: true, folderId: this.folderId || null})\r\n    },\r\n\r\n    //加载数据\r\n    load() {\r\n      this.$request.get('/diskFiles/selectAll',{\r\n        params:{\r\n          category: this.category || null,\r\n          folderId: this.folderId || null\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data || []\r\n        this.tableData.forEach(item => {\r\n          this.$set(item, 'optShow', false)   // 强制设置每行  加一个 optShow属性\r\n        })\r\n      })\r\n\r\n      this.$request.get('/diskFiles/selectFolders',{\r\n        params:{\r\n          folderId: this.folderId || null,\r\n        }\r\n      }).then(res=>{\r\n        this.folders = res.data || []\r\n        console.log(this.folders)\r\n      })\r\n    },\r\n\r\n    //处理上传成功\r\n    handleFileSuccess(res) {\r\n      if (res.code === '200') {\r\n        this.$message.success(\"Upload Successfully\")\r\n        this.load()\r\n      } else {\r\n        this.$message.error('Upload Failed')\r\n      }\r\n    },\r\n\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}