{"ast":null,"code":"export default {\n  name: \"OpenShare\",\n  data() {\n    return {\n      code: this.$route.query.code,\n      shareId: this.$route.query.shareId,\n      share: {},\n      validateFailed: false,\n      // 验证失败\n      folders: [],\n      typeList: [{\n        text: 'mp3',\n        icon: 'el-icon-mp3'\n      }, {\n        text: 'mp4',\n        icon: 'el-icon-mp4'\n      }, {\n        text: 'jpg',\n        icon: 'el-icon-jpg'\n      }, {\n        text: 'jpeg',\n        icon: 'el-icon-jpeg'\n      }, {\n        text: 'png',\n        icon: 'el-icon-png'\n      }, {\n        text: 'pdf',\n        icon: 'el-icon-pdf'\n      }, {\n        text: 'docx',\n        icon: 'el-icon-docx'\n      }, {\n        text: 'txt',\n        icon: 'el-icon-text'\n      }, {\n        text: 'zip',\n        icon: 'el-icon-zip'\n      }, {\n        text: 'folder',\n        icon: 'el-icon-folder'\n      }],\n      tableData: [],\n      folderId: this.$route.query.folderId\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    //打开文件\n    openFile(row) {\n      if (row.folder === 'Yes') {\n        //文件夹\n        location.href = '/front/openShare?code=' + this.code + '&shareId=' + row.id + '&folderId=' + row.id;\n        this.load();\n      } else {\n        window.open(this.$baseUrl + '/diskFiles/preview/' + row.fileId);\n      }\n    },\n    //下载文件\n    download(url) {\n      window.open(url); // 文件下载\n    },\n\n    load() {\n      this.$request.get('/share/selectById/' + this.shareId).then(res => {\n        this.share = res.data || {};\n        this.tableData = res.data ? [res.data] : [];\n\n        // 验证code对不对\n        if (this.share.code !== this.code) {\n          this.validateFailed = true;\n        } else {\n          this.loadFiles();\n        }\n      });\n    },\n    loadFiles() {\n      // 查询当前目录的数据\n      this.$request.get('/diskFiles/selectShare', {\n        params: {\n          shareId: this.shareId || null,\n          folderId: this.folderId || null\n        }\n      }).then(res => {\n        this.tableData = res.data || [];\n      });\n\n      // 查询当前目录的路径数据\n      this.$request.get('/diskFiles/selectFolders', {\n        params: {\n          folderId: this.folderId || null\n        }\n      }).then(res => {\n        this.folders = res.data || [];\n        // if (this.folders?.length) {\n        //   this.folders.splice(0, 1)\n        // }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","code","$route","query","shareId","share","validateFailed","folders","typeList","text","icon","tableData","folderId","created","load","methods","openFile","row","folder","location","href","id","window","open","$baseUrl","fileId","download","url","$request","get","then","res","loadFiles","params"],"sources":["src/views/front/OpenShare.vue"],"sourcesContent":["<template>\r\n  <div style=\"margin-top: 30px\">\r\n    <!--分享失败-->\r\n    <div style=\"margin: 100px auto; text-align: center;\r\n    font-size: 60px; color: #666666\" v-if=\"validateFailed\">\r\n      (>_<) The file no longer exists or has been deleted.\r\n    </div>\r\n\r\n    <!--分享成功-->\r\n    <div class=\"card\" style=\"margin: 5px auto; width: 70%\" v-else>\r\n      <div style=\"color: #666666; display: flex; align-items: center\">\r\n        File Shared: <strong>{{share.name}}</strong>\r\n        <i class=\"el-icon-time\" style=\"margin-left: 20px; margin-right: 5px\"></i>{{share.shareTime}}\r\n        <span style=\"margin-left: 20px\">\r\n          <i class=\"el-icon-info\" style=\"margin-right: 5px\"></i>\r\n          <span v-if=\"share.status?.includes('hours')\" style=\"color: #f13b3b\">{{share.status}}</span>\r\n          <span v-else>{{share.status}}</span>\r\n        </span>\r\n      </div>\r\n      <!--分享内容-->\r\n      <div style=\"padding: 15px 0; margin-top: 30px\" >\r\n        <a :href=\"'/front/openShare?code=' + code + '&shareId=' + shareId\" style=\"font-weight: bold; color: #606266\">\r\n          All Files <i class=\"el-icon-arrow-right\" v-if=\"folders.length\"></i>\r\n        </a>\r\n        <a :href=\"'/front/openShare?code=' + code + '&shareId=' + shareId + '&folderId=' + item.folderId\" v-for=\"(item, index) in folders\" :key=\"item.id\"\r\n           :style=\"{ color: '#606266', fontWeight: index === folders.length - 1 ? 'normal' : 'bold' }\">\r\n          {{item.name}} <i class=\"el-icon-arrow-right\" v-if=\"index !== folders.length-1\"/>\r\n        </a>\r\n      </div>\r\n      <!--分享表格-->\r\n      <el-table size=\"medium\" stripe :data=\"tableData\">\r\n        <el-table-column label=\"Name\">\r\n          <template v-slot=\"scope\">\r\n            <!--功能按钮-->\r\n            <div style=\"display: flex; cursor: pointer\" @click=\"openFile(scope.row)\">\r\n              <div style=\" flex: 1\">\r\n                <i style=\"font-size:25px; color: #409EFF\" :class=\"typeList.find(v => v.text === scope.row.type)?.icon || 'el-icon-file'\"></i>\r\n                <span v-if=\"!scope.row.unSave\" style=\"margin-left: 5px\">{{ scope.row.name }}</span>\r\n              </div>\r\n              <div style=\"color: #409EFF; font-size: 13px\">\r\n                <el-tooltip content=\"Upload\" effect=\"light\" :open-delay=\"1000\" v-if=\"scope.row.folder === 'No'\">\r\n                  <i class=\"el-icon-download\" style=\"margin-right: 10px; cursor: pointer\" @click=\"download(scope.row.file)\"></i>\r\n                </el-tooltip>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column prop=\"updateTime\" label=\"Time\" width=\"200\"></el-table-column>\r\n        <el-table-column prop=\"size\" label=\"Size(KB)\" width=\"120\"></el-table-column>\r\n      </el-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"OpenShare\",\r\n  data(){\r\n    return{\r\n      code: this.$route.query.code,\r\n      shareId: this.$route.query.shareId,\r\n      share: {},\r\n      validateFailed: false,   // 验证失败\r\n      folders: [],\r\n      typeList: [\r\n        { text: 'mp3', icon: 'el-icon-mp3' },\r\n        { text: 'mp4', icon: 'el-icon-mp4' },\r\n        { text: 'jpg', icon: 'el-icon-jpg' },\r\n        { text: 'jpeg', icon: 'el-icon-jpeg' },\r\n        { text: 'png', icon: 'el-icon-png' },\r\n        { text: 'pdf', icon: 'el-icon-pdf' },\r\n        { text: 'docx', icon: 'el-icon-docx' },\r\n        { text: 'txt', icon: 'el-icon-text' },\r\n        { text: 'zip', icon: 'el-icon-zip' },\r\n        { text: 'folder', icon: 'el-icon-folder' },\r\n      ],\r\n      tableData: [],\r\n      folderId: this.$route.query.folderId\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.load()\r\n  },\r\n\r\n  methods:{\r\n    //打开文件\r\n    openFile(row){\r\n      if(row.folder === 'Yes'){ //文件夹\r\n        location.href='/front/openShare?code=' + this.code + '&shareId=' + row.id +'&folderId=' + row.id\r\n        this.load()\r\n      }else{\r\n        window.open(this.$baseUrl + '/diskFiles/preview/' + row.fileId)\r\n      }\r\n    },\r\n\r\n    //下载文件\r\n    download(url){\r\n      window.open(url)  // 文件下载\r\n    },\r\n\r\n    load() {\r\n      this.$request.get('/share/selectById/' + this.shareId).then(res=> {\r\n        this.share = res.data || {}\r\n        this.tableData = res.data ? [res.data] : []\r\n\r\n        // 验证code对不对\r\n        if (this.share.code !== this.code) {\r\n          this.validateFailed = true\r\n        } else {\r\n          this.loadFiles()\r\n        }\r\n      })\r\n    },\r\n    loadFiles() {\r\n      // 查询当前目录的数据\r\n      this.$request.get('/diskFiles/selectShare', {\r\n        params: {\r\n          shareId: this.shareId || null,\r\n          folderId: this.folderId || null\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data || []\r\n      })\r\n\r\n      // 查询当前目录的路径数据\r\n      this.$request.get('/diskFiles/selectFolders', {\r\n        params: { folderId: this.folderId || null }\r\n      }).then(res => {\r\n        this.folders = res.data || []\r\n        // if (this.folders?.length) {\r\n        //   this.folders.splice(0, 1)\r\n        // }\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAwDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,IAAA;MACAG,OAAA,OAAAF,MAAA,CAAAC,KAAA,CAAAC,OAAA;MACAC,KAAA;MACAC,cAAA;MAAA;MACAC,OAAA;MACAC,QAAA,GACA;QAAAC,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,EACA;MACAC,SAAA;MACAC,QAAA,OAAAV,MAAA,CAAAC,KAAA,CAAAS;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,IAAA;EACA;EAEAC,OAAA;IACA;IACAC,SAAAC,GAAA;MACA,IAAAA,GAAA,CAAAC,MAAA;QAAA;QACAC,QAAA,CAAAC,IAAA,mCAAAnB,IAAA,iBAAAgB,GAAA,CAAAI,EAAA,kBAAAJ,GAAA,CAAAI,EAAA;QACA,KAAAP,IAAA;MACA;QACAQ,MAAA,CAAAC,IAAA,MAAAC,QAAA,2BAAAP,GAAA,CAAAQ,MAAA;MACA;IACA;IAEA;IACAC,SAAAC,GAAA;MACAL,MAAA,CAAAC,IAAA,CAAAI,GAAA;IACA;;IAEAb,KAAA;MACA,KAAAc,QAAA,CAAAC,GAAA,6BAAAzB,OAAA,EAAA0B,IAAA,CAAAC,GAAA;QACA,KAAA1B,KAAA,GAAA0B,GAAA,CAAA/B,IAAA;QACA,KAAAW,SAAA,GAAAoB,GAAA,CAAA/B,IAAA,IAAA+B,GAAA,CAAA/B,IAAA;;QAEA;QACA,SAAAK,KAAA,CAAAJ,IAAA,UAAAA,IAAA;UACA,KAAAK,cAAA;QACA;UACA,KAAA0B,SAAA;QACA;MACA;IACA;IACAA,UAAA;MACA;MACA,KAAAJ,QAAA,CAAAC,GAAA;QACAI,MAAA;UACA7B,OAAA,OAAAA,OAAA;UACAQ,QAAA,OAAAA,QAAA;QACA;MACA,GAAAkB,IAAA,CAAAC,GAAA;QACA,KAAApB,SAAA,GAAAoB,GAAA,CAAA/B,IAAA;MACA;;MAEA;MACA,KAAA4B,QAAA,CAAAC,GAAA;QACAI,MAAA;UAAArB,QAAA,OAAAA,QAAA;QAAA;MACA,GAAAkB,IAAA,CAAAC,GAAA;QACA,KAAAxB,OAAA,GAAAwB,GAAA,CAAA/B,IAAA;QACA;QACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}